name: Publish to NPM

on:
  workflow_call:
    inputs:
      SERVICE_LOCATION:
        description: 'SERVICE LOCATION'
        required: true
        type: string
      GRADLEW_ARGS:
        description: 'Provide gradlew arguments'
        required: true
        type: string
    secrets:
      NPM_AUTH_TOKEN:
        required: true

env:
  ANDROID_HOME: '/opt/android-sdk/'

jobs:
  gradlew-publish-to-npm-registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 11
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.3.1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3.3.1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: npm Install
        run: cd ${{ inputs.SERVICE_LOCATION }} && npm install

      - name: Build APK via Gradlew
        run: |
          cd ${{ inputs.SERVICE_LOCATION }}/android
          sed -i -e 's/\r$//' ./gradlew
          chmod +x ./gradlew
          ./gradlew ${{ inputs.GRADLEW_ARGS }}

      - name: Verify the build Gradlew application
        run: cd ${{ inputs.SERVICE_LOCATION }} && npm run verify

      - name: Set up Node.js
        uses: actions/setup-node@v3.7.0
        with:
          package_path: '${{ inputs.SERVICE_LOCATION }}'
          registry-url: 'https://registry.npmjs.org/'

      - name: Publish package
        run: cd ${{ inputs.SERVICE_LOCATION }} && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Tag
        run: |
          pwd
          cd ${{ inputs.SERVICE_LOCATION }}
          VERSION=$(grep -o '"version": "[^"]*' package.json | sed 's/"version": "//') #Replace with the versioning strategy you prefer
          VERSION="v${VERSION}_npm"
          git tag $VERSION
          git push origin $VERSION
