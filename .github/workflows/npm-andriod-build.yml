name: Android Build via Gradlew
on:
  workflow_call:
    inputs:
      SERVICE_LOCATION:
        description: 'SERVICE LOCATION'
        required: true
        type: string
      BUILD_ARTIFACT:
        description: 'SERVICE NAME'
        required: true
        type: string
      GRADLEW_ARGS:
        description: 'Provide gradlew command arguments'
        required: true
        type: string
    secrets:
      SLACK_WEBHOOK_URL:
        required: true

env:
  ANDROID_HOME: '/opt/android-sdk/'

jobs:
  npm-andriod-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 11
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.3.1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3.3.1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: npm Install
        run: cd ${{ inputs.SERVICE_LOCATION }} && npm install

      - name: Build APK via Gradlew
        run: |
          cd ${{ inputs.SERVICE_LOCATION }}
          sed -i -e 's/\r$//' ./gradlew
          chmod +x ./gradlew
          ./gradlew ${{ inputs.GRADLEW_ARGS }}

      - name: Verify the build Gradlew application
        run: cd ${{ inputs.SERVICE_LOCATION }} && npm run verify

      - name: Find *.apk files
        id: apk
        run: |
          echo "FOUND_APK=false" >> $GITHUB_OUTPUT
          APK_LIST=$( find -name '*.apk' )
          if [[ $APK_LIST != '' ]]; then
            echo "FOUND_APK=true" >> $GITHUB_OUTPUT
          fi
          find -name '*.apk' -type f  -exec zip ${{ inputs.BUILD_ARTIFACT }}.zip {} +

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.BUILD_ARTIFACT }}
          path: ${{ inputs.BUILD_ARTIFACT }}.zip
          retention-days: 5
        if: (steps.apk.outputs.FOUND_APK == 'true')

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,commit,workflow,job # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: failure() # Pick up events even if the job fails or is canceled.